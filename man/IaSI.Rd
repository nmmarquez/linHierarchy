% Generated by roxygen2 (4.0.1): do not edit by hand
\name{IaSI}
\alias{IaSI}
\title{Find player rankings with I&SI method}
\usage{
IaSI(intData, max.iter = 100)
}
\arguments{
\item{intData}{object of class "interData" to find player rankings}

\item{max.iter}{the maximum number of iterations for the algorithm to run}
}
\value{
a list with
- a data frame with all players sorted by their ranking
- a list detailing the number of inconsistancies and strength of
inconstancies
- the dominance matrix reflecting the ranking order
}
\description{
Implements I&SI method for finding a "linear hierarchy" among players
}
\details{
Applies the methods described in Han de Vries 1998 to find a linear
hierarchy amongst interacting members of a group. The algorithm attempts to
minimize the number of occurences where a player of low ranking wins a
majority of interactions over a higher ranking player. If the algorithm finds
an ordering where this even never occurs it will immeadiately exit and return
the result.
}
\examples{
# generate generic data
interactions <- data.frame (a = sample (letters [1:10], 100, T),
                            b = sample (letters [1:10], 100, T),
                            o = sample (c(-1,-1,0,1,1), 100, T),
                            d = Sys.time () + runif (100, 40, 160))
# convert to interData object
id1 <- intTableConv (interactions)
# apply I&SI method for finding a linear hierarchy
IaSI (id1)
}
\references{
Han de Vries (1998) Finding a Dominance Order Most Consistant
with a Linear Hierarchy.
}

